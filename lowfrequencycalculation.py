# -*- coding: utf-8 -*-
"""LowFrequencyCalculation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qXVHoVLlJFSh96Z_9kwhIfc988NIeQc1

Imports
"""

!pip install pandas

from pandas.api.types import is_string_dtype
from pandas.api.types import is_numeric_dtype

import numpy as np
import pandas as pd
import nltk
from nltk.corpus import stopwords
import re

nltk.download('punkt')
nltk.download('stopwords')

"""Read data into dataframe"""

inputFile = 'Language_Processed_Data.csv'
inputData = pd.read_csv(inputFile, sep=',', skiprows=(0), header=(0))

inputData['Question'].dropna(inplace=True)
inputData.reset_index(inplace=True)

"""Extracting Sentences"""

sentences = []

for index, row in inputData.iterrows():
  sentences.append(row['Question'])

#print(sentences)
print(type(sentences))
print(type(sentences[2]))

"""Processing data"""

#Tokenize sentences into corpus
corpus = []

for s in sentences:
  tokens = nltk.word_tokenize(s)
  for t in tokens:
    t = ''.join([i for i in t if not i.isdigit()])
    t = t.strip()

    if ' ' in t:
      words = t.split("\\s")
      for w in words:
        if not w.isdigit():
          corpus.append(str(w))
    else:
      if not t.isdigit():
        corpus.append(str(t))



#Remove punctuation
for i in range(len(corpus)):
  corpus[i] = corpus[i].lower()
  corpus[i] = re.sub(r'\W', ' ', corpus[i])
  corpus[i] = re.sub(r'\s+', ' ', corpus[i])


#Remove stop words
#stop_words = set(stopwords.words('english'))

#for word in corpus:
#    if word not in stop_words:
#        corpus.remove(word)

"""Count number of words"""

wordFrequency = {}
for word in corpus:
  if not word.isdigit():
    wordFrequency[word] = wordFrequency.get(word, 0) + 1

for key in wordFrequency:
  print(key + ': ' + str(wordFrequency[key]))


wordFrequency = {k: v for k, v in sorted(wordFrequency.items(), key=lambda item: item[1])}

with open('wordFrequency.txt', 'w') as outfile:
  for key in wordFrequency:
    outfile.write(key + ': ' + str(wordFrequency[key]) + '\n')